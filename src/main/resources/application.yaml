spring:
  #这个是关键，放开springboot对静态资源的拦截
  mvc:
    static-path-pattern: /**
    hiddenmethod:
      filter:
        enabled: true
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    ##url: jdbc:mysql://localhost:3306/paysystem-customer01?useUnicode=true&characterEncoding=utf-8
    url: jdbc:mysql://rm-wz9d27c48r7g6no6deo.mysql.rds.aliyuncs.com/spaymen_test?useUnicode=true&characterEncoding=utf-8
    username: spaymen_test
    password: spaymen_test1234!@#$
    ##username: root
    ##password: 123456
    dbcp2:
      min-idle: 5 #数据库连接池的最小连接数
      initial-size: 5 #数据库连接池的初始化连接数
      max-total: 20 #数据库连接池的最大的连接数
      max-wait-millis: 60000 #等待连接获取的最大超时时间
      remove-abandoned-timeout: 1800 # 超时时间(以秒数为单位)
      time-between-eviction-runs-millis: 60000 #配置间隔多久才进行一次检测,检测需要关闭的空闲连接,单位毫秒
      min-evictable-idle-time-millis: 300000 #配置一个连接在连接在连接池中的最小的生存时间,单位毫秒
      validation-query: SELECT 1 #验证数据库服务可用性的SQL,用来检测连接时代否有效,根据不同数据库测试语句也会不同,例如Oracle的语句为:SELECT 1 FROM DUAL
      testWhileIdle: true # 申请连接时检测空闲时间，根据空闲时间再检测连接是否有效.建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRun
      testOnBorrow: false # 申请连接时直接检测连接是否有效.申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      testOnReturn: false # 归还连接时检测连接是否有效.归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      filters: stat,wall,log4j2
      breakAfterAcquireFailure: true
      remove-abandoned: true # 是否自动回收超时连接
      timeBetweenConnectErrorMillis: 300000 # 连接出错后重试时间间隔
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 2KB
      max-file-size: 200MB
      max-request-size: 215MB
      resolve-lazily: true
mybatis-plus:
  mapper-locations: classpath:/mapper/*Mapper.xml,/mapper/**/*Mapper.xml # 扫描mapper.xml
# jwt的配置
config:
  jwt:
    secret: abcdefg1234567 # jwt私钥
    expire: 36000 # token过期时间
    header: token # 头部
server:
  port: 1980
  tomcat:
    max-connections: 20000
    uri-encoding: utf-8
    threads:
      max: 1000
      min-spare: 30